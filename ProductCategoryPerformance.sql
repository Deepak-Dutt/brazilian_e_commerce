-- ##############################################
-- Matrix 2: Product & Category Performance
-- ##############################################
-- **********************************************
-- KPI 1: Top Categories by Revenue and Units Sold
-- **********************************************
-- ----------------------------------------------
-- It displays category, total_revenue and item_sold per category
-- ----------------------------------------------
select p.product_category_name as category,
       round(sum(oi.price), 2) as total_revenue,
       count(*) as units_sold
from items oi
join products as p
on oi.product_id = p.product_id
group by category
order by total_revenue desc
limit 10;

-- **********************************************
-- KPI 2: Fast growing categories of Jan to Sept 2017 vs 2018
-- **********************************************
with jan_sept_rev as (
					-- ----------------------------------------------
					-- Revenue generated by category from 2017-2018
					-- ----------------------------------------------
					select p.product_category_name as categories,
						   sum(oi.price) as revenue,
						   extract(year from o.order_approved_at) as years
					from items oi
					join products as p on p.product_id = oi.product_id
					join orders as o on o.order_id = oi.order_id
					where o.order_approved_at is not null and
						  extract(month from o.order_approved_at) between 1 and 9 and
						  extract(year from o.order_approved_at) in (2017, 2018)
					group by categories, years
					order by years
),
pivot_rev as (
			-- ----------------------------------------------
			-- pivot year into two columns
			-- ----------------------------------------------
			select categories,
				   max(case when years = 2017 then revenue end) as rev_2017,
				   max(case when years = 2018 then revenue end) as rev_2018
			from jan_sept_rev
			group by categories
)
-- ----------------------------------------------
-- It calculates the growth
-- ----------------------------------------------
select categories, rev_2017, rev_2018, ROUND(100.0 * (rev_2018 - rev_2017) / NULLIF(rev_2017,0), 2) AS yoy_growth
from pivot_rev
where rev_2017 is not null and rev_2018 is not null
order by yoy_growth desc
limit 10;

-- ***********************************************
-- KPI 3: High average order value / low volume categories
-- ***********************************************
with cat_sold as (
				-- ----------------------------------------------
				-- It compute revenue & units per category
				-- ----------------------------------------------
				select p.product_category_name as categories,
					   sum(oi.price) as revenue,
					   count(*) as units_sold
				from items oi
				join products p on oi.product_id = p.product_id
				group by categories
),
avg_price as (
			-- ----------------------------------------------
			-- It computes average price of items
			-- ----------------------------------------------
			select categories, revenue, units_sold,
				   round(revenue * 1.0 / units_sold, 2) AS avg_price_of_item
			from cat_sold
), 
row_count as (
    select count(*) as total_rows
    from avg_price
)
-- ----------------------------------------------
-- It computes average price of items
-- ----------------------------------------------
select *
from avg_price
where units_sold < (select percentile_cont(0.50) within group (order by units_sold) from avg_price) and
      avg_price_of_item > (select percentile_cont(0.50) within group (order by avg_price_of_item) from avg_price)
order by avg_price_of_item desc
limit 10;